import{T as P}from"./typeWriterAnimation-CCw41AxV.js";/* empty css                                                                     */import{j as h,o as u,k as G,f as g,c as y,b as s,a as d,e as D}from"./index-B0ON13hr.js";const C={id:"eyeSVG",viewBox:"0 0 1000 1000"},M={__name:"EyeAnimation",setup(w){return u(()=>{const a=document.querySelector("#eyeSVG"),t=a.createSVGPoint(),S=f("#eye-left"),x=f("#eye-right");let n=null;const A=()=>{const e=t.matrixTransform(a.getScreenCTM().inverse());S.rotateTo(e),x.rotateTo(e),n=null},o=e=>{t.x=e.clientX,t.y=e.clientY,n||(n=requestAnimationFrame(A))};window.addEventListener("mousemove",o),G(()=>{window.removeEventListener("mousemove",o)});function f(e){const r=document.querySelector(e);return{rotateTo(l){const i=r.getBBox(),c=i.x+i.width/2,b=i.y+i.height/2,V=l.x-c,k=l.y-b,v=Math.atan2(k,V),p=r.querySelector(".pupil"),m=30,_=c+m*Math.cos(v),I=b+m*Math.sin(v);p.setAttribute("cx",_),p.setAttribute("cy",I)}}}}),(a,t)=>(g(),y("svg",C,t[0]||(t[0]=[s('<polygon id="diamond-shape" points="250,50 850,500 700,950 150,500" fill="#57378b" data-v-07e91c3f></polygon><g id="eye-left" data-v-07e91c3f><circle class="eyeball" cx="300" cy="500" r="190" data-v-07e91c3f></circle><circle class="pupil" cx="300" cy="500" r="100" data-v-07e91c3f></circle></g><g id="eye-right" data-v-07e91c3f><circle class="eyeball" cx="700" cy="500" r="190" data-v-07e91c3f></circle><circle class="pupil" cx="700" cy="500" r="100" data-v-07e91c3f></circle></g>',3)])))}},j=h(M,[["__scopeId","data-v-07e91c3f"]]),L={class:"outer-wrapper"},T={class:"wrapper"},E={class:"section"},B={class:"column"},q={__name:"GsapAnimationsView",setup(w){return u(()=>{const a=document.querySelectorAll("h2.typing-animation");a.length>0&&P(a)}),(a,t)=>(g(),y("main",null,[d("div",L,[d("div",T,[d("div",E,[t[0]||(t[0]=s('<h2 class="prototype-title title typing-animation" data-v-f9518b6f>Dynamic animations and transitions</h2><div class="column" data-v-f9518b6f><p data-v-f9518b6f>A prototype that researched the use of animations with text and shapes on a responsive website.</p><br data-v-f9518b6f><p style="display:inline;" data-v-f9518b6f>Link to git repo:</p><a href="https://github.com/EHB-MCT/expertlab-pt3-RyanVankriekinge/" target="_blank" style="color:azure;font-family:&#39;Oswald&#39;, sans-serif;font-size:16px;" data-v-f9518b6f>Prototype: Dynamic transitions</a><h3 data-v-f9518b6f>Goals:</h3><ul data-v-f9518b6f><li data-v-f9518b6f>Create dynamic animations for my portfolio page</li><li data-v-f9518b6f>Learning how to use different js animation libraries and how to choose the appropriate library for each individual project.</li><li data-v-f9518b6f>Learning how to integrate transitions and animations in a one page Vue application.</li><li data-v-f9518b6f>Learning how to create and animate shapes and text while keeping the website responsive for all screen sizes.</li></ul><h3 data-v-f9518b6f>Used technologies:</h3><ul data-v-f9518b6f><li data-v-f9518b6f>Adobe XD: Designing my application visually before developing it</li><li data-v-f9518b6f>Vue.js: Chosen front-end framework</li></ul></div>',2)),d("div",B,[D(j)])]),t[1]||(t[1]=s('<div class="section" data-v-f9518b6f><h2 class="prototype-title title typing-animation" data-v-f9518b6f>Process: Design</h2><p data-v-f9518b6f>Since this prototype was the first contribution to my portfolio website, I started by designing this website in Adobe XD. This design was based on my own personal style guide, which I created earlier for my curriculum vitae. </p><br data-v-f9518b6f><p data-v-f9518b6f>After designing the page, I started thinking about which animation would look good on each element. I put these in a list and added them to my planning. </p></div><div class="section" data-v-f9518b6f><h2 class="prototype-title title typing-animation" data-v-f9518b6f>Animations</h2><h3 data-v-f9518b6f>Defining requirements</h3><p class="list-header" data-v-f9518b6f>I had the following needs for my animations:</p><ul data-v-f9518b6f><li data-v-f9518b6f>Responsiveness</li><li data-v-f9518b6f>Beginner-friendly library</li><li data-v-f9518b6f>Performance</li><li data-v-f9518b6f>Support for major browsers</li></ul><p class="list-header" data-v-f9518b6f>Key features I wanted to implement:</p><ul data-v-f9518b6f><li data-v-f9518b6f>Page transitions on router change</li><li data-v-f9518b6f>Hover effects on navigation and buttons</li><li data-v-f9518b6f>Scrolling animations</li><li data-v-f9518b6f>Element transformations</li></ul><h3 data-v-f9518b6f>Choosing a librarie</h3><p data-v-f9518b6f>To choose a library, I looked at some of the most commonly used animation libraries. I compared these on beginner-friendliness, performance, use case, support, integration with the framework I&#39;ll be using (which is Vue) and how many resources are available. I chose GSAP because it&#39;s perfect for creating complex animations like scroll effects and timelines. It’s beginner-friendly, but powerful compared to other libraries and it has a big community with a lot of free resources. For simple transitions like fades or hovers, I relied on CSS and Vue’s built-in transition system, this is more lightweight and easy to use for basic animations without extra complexity.</p><table class="animations-libraries-table" data-v-f9518b6f><thead data-v-f9518b6f><tr data-v-f9518b6f><th data-v-f9518b6f>Library</th><th data-v-f9518b6f>Complexity</th><th data-v-f9518b6f>Performance</th><th data-v-f9518b6f>Use Case</th><th data-v-f9518b6f>SVG Support</th><th data-v-f9518b6f>Physics Support</th><th data-v-f9518b6f>Integration with Vue</th><th data-v-f9518b6f>Community</th></tr></thead><tbody data-v-f9518b6f><tr data-v-f9518b6f><td data-v-f9518b6f>Vanilla JS &amp; CSS</td><td data-v-f9518b6f>Low</td><td data-v-f9518b6f>High (direct DOM control)</td><td data-v-f9518b6f>Simple animations, CSS transitions</td><td data-v-f9518b6f>Basic (CSS only)</td><td data-v-f9518b6f>Custom-built</td><td data-v-f9518b6f>Native to Vue (templates, lifecycle hooks)</td><td data-v-f9518b6f>Very large, many free resources</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>GSAP</td><td data-v-f9518b6f>Low</td><td data-v-f9518b6f>Very High (optimized engine)</td><td data-v-f9518b6f>Advanced 2D/3D animations, UI/UX effects</td><td data-v-f9518b6f>Excellent</td><td data-v-f9518b6f>Yes (via plugins like Physics2D)</td><td data-v-f9518b6f>Seamless with Vue; Vue-specific plugins available</td><td data-v-f9518b6f>Large, rich resources, active forums</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>Framer Motion</td><td data-v-f9518b6f>Moderate (React focus)</td><td data-v-f9518b6f>High (React-optimized)</td><td data-v-f9518b6f>React animations, UI/UX in React apps</td><td data-v-f9518b6f>Good</td><td data-v-f9518b6f>Basic</td><td data-v-f9518b6f>Not designed for Vue; significant adjustments needed</td><td data-v-f9518b6f>Large for React, not for Vue</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>two.js</td><td data-v-f9518b6f>Low</td><td data-v-f9518b6f>High (2D focused)</td><td data-v-f9518b6f>Vector-based animations, artistic 2D</td><td data-v-f9518b6f>Excellent</td><td data-v-f9518b6f>Limited</td><td data-v-f9518b6f>Works in Vue lifecycle hooks (e.g., mounted)</td><td data-v-f9518b6f>Moderate, pretty niche, with good docs</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>three.js</td><td data-v-f9518b6f>High (requires 3D knowledge)</td><td data-v-f9518b6f>High (GPU-accelerated)</td><td data-v-f9518b6f>3D web animations, interactive graphics</td><td data-v-f9518b6f>Limited</td><td data-v-f9518b6f>Limited</td><td data-v-f9518b6f>Well-supported with libraries like vue-threejs</td><td data-v-f9518b6f>Very large, extensive tutorials and examples</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>Anime.js</td><td data-v-f9518b6f>Low</td><td data-v-f9518b6f>High</td><td data-v-f9518b6f>Artistic, timeline-based 2D animations</td><td data-v-f9518b6f>Excellent</td><td data-v-f9518b6f>No</td><td data-v-f9518b6f>Works well with Vue lifecycle hooks (e.g., mounted)</td><td data-v-f9518b6f>Moderate, good tutorials and examples</td></tr></tbody></table><h3 data-v-f9518b6f>Installation methods</h3><p class="list-header" data-v-f9518b6f>GSAP has 3 popular installation methods:</p><ul data-v-f9518b6f><li data-v-f9518b6f>CDN: Quick set-up for small projects without version control</li><li data-v-f9518b6f>NPM: Best for projects using frameworks like Vue, bigger community than Yarn</li><li data-v-f9518b6f>Yarn: Faster and more secure than NPM, but less resources</li></ul><p style="margin-top:15px;" data-v-f9518b6f>I chose NPM for its large community and compatibility with other dependencies in my project.</p></div><div class="section" data-v-f9518b6f><h2 class="prototype-title title typing-animation" data-v-f9518b6f>Development</h2><h3 data-v-f9518b6f>Animations with Vue</h3><p data-v-f9518b6f>I used Vue&#39;s built-in animation system for simple transitions (fades and slides)</p><h3 data-v-f9518b6f>Animation scripts used with GSAP</h3><ul data-v-f9518b6f><li data-v-f9518b6f>gsap.from: Animating from defined starting state</li><li data-v-f9518b6f>gsap.to: Animating to a defined ending state</li><li data-v-f9518b6f>gsap.fromTo: Specifies both start and end state</li><li data-v-f9518b6f>gsap.set: immediately applies properties (like a hold keyframe)</li><li data-v-f9518b6f>ScrollTrigger: Triggers animations based on the user&#39;s scroll position</li></ul><h3 data-v-f9518b6f>Animation techniques used with GSAP</h3><ul data-v-f9518b6f><li data-v-f9518b6f>Easing: For more natural animations</li><li data-v-f9518b6f>Staggers: Adds delay when animating multiple elements with the same animation (e.g. the page with my works)</li><li data-v-f9518b6f>Timeline: Creating sequenced animations</li></ul></div><div class="section" data-v-f9518b6f><h2 class="prototype-title title typing-animation" data-v-f9518b6f>Challenges</h2><table class="challenges-table" data-v-f9518b6f><thead data-v-f9518b6f><tr data-v-f9518b6f><th data-v-f9518b6f>Challenge</th><th data-v-f9518b6f>Resolution</th></tr></thead><tbody data-v-f9518b6f><tr data-v-f9518b6f><td data-v-f9518b6f>Mobile menu animation not showing</td><td data-v-f9518b6f>Adjusted animation starting position using a larger value for <code data-v-f9518b6f>x</code> to fully hide elements off-screen.</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>SVG shapes not rendering</td><td data-v-f9518b6f>Implemented <code data-v-f9518b6f>viewBox</code> in SVG for proper scaling and visibility.</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>Responsiveness issues on small screens</td><td data-v-f9518b6f>Used <code data-v-f9518b6f>min-height</code> and adjusted container paddings for better alignment.</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>Overlapping text and shapes</td><td data-v-f9518b6f>Added margin between sections and tested scaling behavior.</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>Scroll-triggered animations appearing at incorrect times</td><td data-v-f9518b6f>Adjusted trigger points and animation end positions for natural flow.</td></tr><tr data-v-f9518b6f><td data-v-f9518b6f>Elements in group not staggered</td><td data-v-f9518b6f>Used <code data-v-f9518b6f>&gt; *</code> selector for child elements to apply GSAP stagger efficiently.</td></tr></tbody></table></div><div class="section" data-v-f9518b6f><h2 class="prototype-title title typing-animation" data-v-f9518b6f>Reflection</h2><p data-v-f9518b6f>This sprint allowed me to gain hands-on experience with GSAP, ScrollTrigger, and Vue’s animation system, refining both my technical skills and understanding of responsiveness.</p><p data-v-f9518b6f>In the future, I want to further optimise my website’s performance and explore more advanced GSAP techniques.</p></div>',5))])])]))}},H=h(q,[["__scopeId","data-v-f9518b6f"]]);export{H as default};
